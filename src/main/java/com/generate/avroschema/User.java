/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.generate.avroschema;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1791173776547594188L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"com.generate.avroschema\",\"fields\":[{\"name\":\"emailAddress\",\"type\":\"string\"},{\"name\":\"employeeId\",\"type\":\"string\"},{\"name\":\"enabled\",\"type\":\"boolean\"},{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"phoneNumber\",\"type\":\"string\"},{\"name\":\"role\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RoleMap\",\"fields\":[{\"name\":\"branchId\",\"type\":\"string\"},{\"name\":\"organisationalId\",\"type\":\"long\"},{\"name\":\"roleId\",\"type\":\"string\"}]},\"java-class\":\"java.util.List\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<User> ENCODER =
      new BinaryMessageEncoder<User>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<User> DECODER =
      new BinaryMessageDecoder<User>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<User> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<User> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<User> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<User>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this User to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a User from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a User instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static User fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated
  public CharSequence emailAddress;
  @Deprecated
  public CharSequence employeeId;
  @Deprecated
  public boolean enabled;
  @Deprecated
  public CharSequence firstName;
  @Deprecated
  public CharSequence lastName;
  @Deprecated
  public CharSequence phoneNumber;
  @Deprecated
  public java.util.List<com.generate.avroschema.RoleMap> role;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public User() {}

  /**
   * All-args constructor.
   * @param emailAddress The new value for emailAddress
   * @param employeeId The new value for employeeId
   * @param enabled The new value for enabled
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param phoneNumber The new value for phoneNumber
   * @param role The new value for role
   */
  public User(CharSequence emailAddress, CharSequence employeeId, Boolean enabled, CharSequence firstName, CharSequence lastName, CharSequence phoneNumber, java.util.List<com.generate.avroschema.RoleMap> role) {
    this.emailAddress = emailAddress;
    this.employeeId = employeeId;
    this.enabled = enabled;
    this.firstName = firstName;
    this.lastName = lastName;
    this.phoneNumber = phoneNumber;
    this.role = role;
  }

  public SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return emailAddress;
    case 1: return employeeId;
    case 2: return enabled;
    case 3: return firstName;
    case 4: return lastName;
    case 5: return phoneNumber;
    case 6: return role;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: emailAddress = (CharSequence)value$; break;
    case 1: employeeId = (CharSequence)value$; break;
    case 2: enabled = (Boolean)value$; break;
    case 3: firstName = (CharSequence)value$; break;
    case 4: lastName = (CharSequence)value$; break;
    case 5: phoneNumber = (CharSequence)value$; break;
    case 6: role = (java.util.List<com.generate.avroschema.RoleMap>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return The value of the 'emailAddress' field.
   */
  public CharSequence getEmailAddress() {
    return emailAddress;
  }


  /**
   * Sets the value of the 'emailAddress' field.
   * @param value the value to set.
   */
  public void setEmailAddress(CharSequence value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'employeeId' field.
   * @return The value of the 'employeeId' field.
   */
  public CharSequence getEmployeeId() {
    return employeeId;
  }


  /**
   * Sets the value of the 'employeeId' field.
   * @param value the value to set.
   */
  public void setEmployeeId(CharSequence value) {
    this.employeeId = value;
  }

  /**
   * Gets the value of the 'enabled' field.
   * @return The value of the 'enabled' field.
   */
  public boolean getEnabled() {
    return enabled;
  }


  /**
   * Sets the value of the 'enabled' field.
   * @param value the value to set.
   */
  public void setEnabled(boolean value) {
    this.enabled = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public CharSequence getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(CharSequence value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public java.util.List<com.generate.avroschema.RoleMap> getRole() {
    return role;
  }


  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.util.List<com.generate.avroschema.RoleMap> value) {
    this.role = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static com.generate.avroschema.User.Builder newBuilder() {
    return new com.generate.avroschema.User.Builder();
  }

  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static com.generate.avroschema.User.Builder newBuilder(com.generate.avroschema.User.Builder other) {
    if (other == null) {
      return new com.generate.avroschema.User.Builder();
    } else {
      return new com.generate.avroschema.User.Builder(other);
    }
  }

  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static com.generate.avroschema.User.Builder newBuilder(com.generate.avroschema.User other) {
    if (other == null) {
      return new com.generate.avroschema.User.Builder();
    } else {
      return new com.generate.avroschema.User.Builder(other);
    }
  }

  /**
   * RecordBuilder for User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    private CharSequence emailAddress;
    private CharSequence employeeId;
    private boolean enabled;
    private CharSequence firstName;
    private CharSequence lastName;
    private CharSequence phoneNumber;
    private java.util.List<com.generate.avroschema.RoleMap> role;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.generate.avroschema.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[0].schema(), other.emailAddress);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[1].schema(), other.employeeId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.enabled)) {
        this.enabled = data().deepCopy(fields()[2].schema(), other.enabled);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[5].schema(), other.phoneNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.role)) {
        this.role = data().deepCopy(fields()[6].schema(), other.role);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(com.generate.avroschema.User other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[0].schema(), other.emailAddress);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[1].schema(), other.employeeId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.enabled)) {
        this.enabled = data().deepCopy(fields()[2].schema(), other.enabled);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[5].schema(), other.phoneNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.role)) {
        this.role = data().deepCopy(fields()[6].schema(), other.role);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * @return The value.
      */
    public CharSequence getEmailAddress() {
      return emailAddress;
    }


    /**
      * Sets the value of the 'emailAddress' field.
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setEmailAddress(CharSequence value) {
      validate(fields()[0], value);
      this.emailAddress = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'employeeId' field.
      * @return The value.
      */
    public CharSequence getEmployeeId() {
      return employeeId;
    }


    /**
      * Sets the value of the 'employeeId' field.
      * @param value The value of 'employeeId'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setEmployeeId(CharSequence value) {
      validate(fields()[1], value);
      this.employeeId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'employeeId' field has been set.
      * @return True if the 'employeeId' field has been set, false otherwise.
      */
    public boolean hasEmployeeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'employeeId' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearEmployeeId() {
      employeeId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'enabled' field.
      * @return The value.
      */
    public boolean getEnabled() {
      return enabled;
    }


    /**
      * Sets the value of the 'enabled' field.
      * @param value The value of 'enabled'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setEnabled(boolean value) {
      validate(fields()[2], value);
      this.enabled = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'enabled' field has been set.
      * @return True if the 'enabled' field has been set, false otherwise.
      */
    public boolean hasEnabled() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'enabled' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearEnabled() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setFirstName(CharSequence value) {
      validate(fields()[3], value);
      this.firstName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setLastName(CharSequence value) {
      validate(fields()[4], value);
      this.lastName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public CharSequence getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setPhoneNumber(CharSequence value) {
      validate(fields()[5], value);
      this.phoneNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public java.util.List<com.generate.avroschema.RoleMap> getRole() {
      return role;
    }


    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder setRole(java.util.List<com.generate.avroschema.RoleMap> value) {
      validate(fields()[6], value);
      this.role = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public com.generate.avroschema.User.Builder clearRole() {
      role = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public User build() {
      try {
        User record = new User();
        record.emailAddress = fieldSetFlags()[0] ? this.emailAddress : (CharSequence) defaultValue(fields()[0]);
        record.employeeId = fieldSetFlags()[1] ? this.employeeId : (CharSequence) defaultValue(fields()[1]);
        record.enabled = fieldSetFlags()[2] ? this.enabled : (Boolean) defaultValue(fields()[2]);
        record.firstName = fieldSetFlags()[3] ? this.firstName : (CharSequence) defaultValue(fields()[3]);
        record.lastName = fieldSetFlags()[4] ? this.lastName : (CharSequence) defaultValue(fields()[4]);
        record.phoneNumber = fieldSetFlags()[5] ? this.phoneNumber : (CharSequence) defaultValue(fields()[5]);
        record.role = fieldSetFlags()[6] ? this.role : (java.util.List<com.generate.avroschema.RoleMap>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<User>
    WRITER$ = (org.apache.avro.io.DatumWriter<User>)MODEL$.createDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<User>
    READER$ = (org.apache.avro.io.DatumReader<User>)MODEL$.createDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override
  protected boolean hasCustomCoders() { return true; }

  @Override
  public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.emailAddress);

    out.writeString(this.employeeId);

    out.writeBoolean(this.enabled);

    out.writeString(this.firstName);

    out.writeString(this.lastName);

    out.writeString(this.phoneNumber);

    long size0 = this.role.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (com.generate.avroschema.RoleMap e0: this.role) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

  }

  @Override
  public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.emailAddress = in.readString(this.emailAddress instanceof Utf8 ? (Utf8)this.emailAddress : null);

      this.employeeId = in.readString(this.employeeId instanceof Utf8 ? (Utf8)this.employeeId : null);

      this.enabled = in.readBoolean();

      this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);

      this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);

      this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);

      long size0 = in.readArrayStart();
      java.util.List<com.generate.avroschema.RoleMap> a0 = this.role;
      if (a0 == null) {
        a0 = new SpecificData.Array<com.generate.avroschema.RoleMap>((int)size0, SCHEMA$.getField("role").schema());
        this.role = a0;
      } else a0.clear();
      SpecificData.Array<com.generate.avroschema.RoleMap> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.generate.avroschema.RoleMap>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          com.generate.avroschema.RoleMap e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new com.generate.avroschema.RoleMap();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.emailAddress = in.readString(this.emailAddress instanceof Utf8 ? (Utf8)this.emailAddress : null);
          break;

        case 1:
          this.employeeId = in.readString(this.employeeId instanceof Utf8 ? (Utf8)this.employeeId : null);
          break;

        case 2:
          this.enabled = in.readBoolean();
          break;

        case 3:
          this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          break;

        case 4:
          this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          break;

        case 5:
          this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
          break;

        case 6:
          long size0 = in.readArrayStart();
          java.util.List<com.generate.avroschema.RoleMap> a0 = this.role;
          if (a0 == null) {
            a0 = new SpecificData.Array<com.generate.avroschema.RoleMap>((int)size0, SCHEMA$.getField("role").schema());
            this.role = a0;
          } else a0.clear();
          SpecificData.Array<com.generate.avroschema.RoleMap> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<com.generate.avroschema.RoleMap>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              com.generate.avroschema.RoleMap e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new com.generate.avroschema.RoleMap();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










